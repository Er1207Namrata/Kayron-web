@model Karyon.Models.CreateOrder

@{
    ViewData["Title"] = "CounterCollect";
    Layout = "~/Views/Shared/_FranchiseLayout.cshtml";
}
<form asp-action="CounterCollect">
    <div class="main-container container-fluid">

        <!-- breadcrumb -->
        <div class="breadcrumb-header justify-content-between">
            <div class="left-content">
                <span class="main-content-title mg-b-0 mg-b-lg-1">Counter Collect Orders</span>
            </div>
            <div class="justify-content-center mt-2">
                <ol class="breadcrumb breadcrumb-style3">
                    <li class="breadcrumb-item tx-15"><a href="javascript:void(0)">Transfer</a></li>
                    <li class="breadcrumb-item tx-15"><a href="javascript:void(0)">Counter Collect Orders</a></li>

                </ol>
            </div>
        </div>
        <!-- /breadcrumb -->


        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">

                        <div class="row">
                            <div class="col-md-12">
                                <p style="color:red">@TempData["CounterCollect"]</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="section-field mb-20 col-sm-3">
                                <label class="mb-10" for="name">Order No </label>
                                <input type="text" asp-for="OrderNo" class="web form-control" placeholder="Order No" maxlength="50" />

                            </div>


                            <div class="section-field mb-10 col-sm-3">
                                <br />
                                <input type="submit" class="btn btn-success" onclick="return validatesearch()" id="BtnSearch" name="Search" style="" value="Search">
                            </div>
                        </div>
                        <br />
                        <input type="hidden" asp-for="Page" />
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>S. No.</th>
                                        <th>Order No</th>
                                        <th>Order Date</th>
                                        <th>Name</th>
                                        <th>Mobile No</th>
                                        <th>Order Amount</th>
                                        <th>Total PV</th>
                                        <th>Status</th>


                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model != null)
                                    {

                                        if (Model.dtDetails != null)
                                        {
                                            if (Model.dtDetails.Rows.Count > 0)
                                            {


                                                int i = 1;

                                                int page = Model.Pager.CurrentPage;
                                                page = (page - 1);
                                                i = ((page) * (Model.Pager.PageSize));
                                                for (int j = 0; j <= Model.dtDetails.Rows.Count - 1; j++)
                                                {
                                                    string cssclass = "";
                                                    <tr>
                                                        <td>@(j+1)</td>
                                                        <td><a style="color:blue" href="#" data-bs-target="#largeModal" data-bs-toggle="modal" onclick="return GetOrderDetails('@Model.dtDetails.Rows[j]["OrderNo"]','@Model.dtDetails.Rows[j]["Name"]','@Model.dtDetails.Rows[j]["MobileNo"]','@Model.dtDetails.Rows[j]["DispatchCount"]','@Model.dtDetails.Rows[j]["CounterOTP"]')">@Model.dtDetails.Rows[j]["OrderNo"]</a></td>
                                                        <td>@Model.dtDetails.Rows[j]["OrderDate"]</td>
                                                        <td>@Model.dtDetails.Rows[j]["Name"]</td>
                                                        <td>@Model.dtDetails.Rows[j]["MobileNo"]</td>

                                                        <td>@Model.dtDetails.Rows[j]["OrderAmount"] </td>
                                                        <td>@Model.dtDetails.Rows[j]["TotalPV"] </td>
                                                        <td>
                                                            @if (Model.dtDetails.Rows[j]["Status"].ToString() == "Placed")
                                                            {
                                                                cssclass = "badge bg-info";
                                                            }
                                                           
                                                            else if (Model.dtDetails.Rows[j]["Status"].ToString() == "Partially Dispatched")
                                                            {
                                                                cssclass = "badge bg-warning";
                                                            }
                                                            else
                                                            {
                                                                cssclass = "badge bg-danger";
                                                            }

                                                            <span class="@cssclass">@Model.dtDetails.Rows[j]["Status"]</span>
                                                        </td>


                                                    </tr>
                                                    i++;
                                                }
                                            }

                                        }
                                    }


                                </tbody>
                            </table>

                            <footer class="card-footer bg-white p-2">

                                <div class="d-md-flex align-items-center justify-content-between">
                                    @if (Model != null)
                                    {
                                        if (Model.Pager != null)
                                        {
                                            @if (Model.Pager.EndPage > 1)
                                            {
                                                <div> Showing @Model.dtDetails.Rows.Count   of @Model.Pager.TotalItems items </div>
                                                <div>
                                                    <ul class="pagination mb-0">
                                                        @if (Model.Pager.CurrentPage > 1)
                                                        {
                                                            <li class="page-item">

                                                                <a class="page-link" onclick="fCallPaging(1,0)" href="#">First</a>
                                                            </li>



                                                            <li class="page-item">
                                                                <a class="page-link" onclick="fCallPaging(@(Model.Pager.CurrentPage - 1),0)" href="#">Previous</a>
                                                            </li>
                                                        }
                                                        @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                                                        {
                                                            var P = @page;
                                                            <li class="page-item @(page == Model.Pager.CurrentPage ? "active" : "")">


                                                                <span><a class="page-link" onclick="fCallPaging(@P,0)" href="#">@P</a></span>
                                                            </li>

                                                        }
                                                        @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                                                        {
                                                            <li class="page-item">

                                                                <a class="page-link" onclick="fCallPaging(@(Model.Pager.CurrentPage + 1),0)" href="#">Next</a>

                                                            </li>
                                                            <li class="page-item">

                                                                <a class="page-link" onclick="fCallPaging(@(Model.Pager.TotalPages),0)" href="#">Last</a>
                                                            </li>
                                                        }
                                                    </ul>
                                                </div>
                                            }
                                        }

                                    }

                                </div>
                            </footer>
                        </div>




                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="largeModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header" style="display:flex;justify-content:space-between;">
                    <div>
                        <h6 class="modal-title">Order Details</h6>
                    </div>
                    <div> <h6 class="modal-title"><span id="CustomerName"></span></h6></div>
                    <div><h6 class="modal-title"><span id="CustomerMobile"></span></h6></div>


                    <div>
                        <button aria-label="Close" class="btn-close" data-bs-dismiss="modal" type="button"><span aria-hidden="true">&times;</span></button>
                    </div>



                </div>
                <div class="modal-body">
                    <div class="table-responsive">
                        <table class="table table-striped" id="tblOrderDetails">
                            <thead>
                                <tr>
                                    <th>S. No.</th>
                                    <th>Product Name</th>
                                    <th>MRP</th>
                                    <th>PV</th>
                                    <th>Qty</th>
                                    <th>Stock</th>
                                    <th style="text-align:right">Grand Total</th>
                                    <th></th>
                                    <th>Dispatch Qty</th>

                                </tr>
                            </thead>
                            <tbody id="OrderDetails">
                            </tbody>
                        </table>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            OTP
                            <br />
                            <input type="text" asp-for="OTP" class="form-control" placeholder="OTP" />
                        </div>
                        <div class="col-md-4">
                            Dispatch Details
                            <br />
                            @Html.DropDownListFor(m => m.DispatchDetails, new SelectList(ViewBag.ddlDispatchDetails, "Value", "Text"), new { @class = "form-control" ,@onchange="fGetDetails()"})
                        </div>
                        <div class="col-md-4" style="display:none" id="divcourierno">
                            Courier No
                            <br />
                            <input type="text" asp-for="CourierNo" class="form-control" placeholder="Courier No" />
                            <input type="hidden" asp-for="DispatchCount" />
                            <input type="hidden" id="CounterOTP" name="CounterOTP" />

                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="submit" name="Skip" class="btn btn-sm btn-info" value="Skip" />
                    <input type="submit" name="Dispatch" class="btn btn-sm btn-primary" onclick="return fcheckisdispatched()" value="Dispatch" />
                    <button class="btn btn-sm btn-secondary" data-bs-dismiss="modal" type="button">Close</button>

                </div>
            </div>
        </div>
    </div>

</form>
<script src="~/AssociatePanel/assets/plugins/jquery/jquery.min.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<link rel="stylesheet" type="text/css" href="https://code.jquery.com/ui/1.12.0/themes/smoothness/jquery-ui.css">

<script>
    $('#FromDate').datepicker({
        dateFormat: 'dd/mm/yy',
        maxDate: 0,
        changeYear: true,
        changeMonth: true
    });
    $('#ToDate').datepicker({
        dateFormat: 'dd/mm/yy',
        maxDate: 0,
        changeYear: true,
        changeMonth: true
    });
    function validatesearch() {
        if ($('#OrderNo').val() == "") {
            $("#OrderNo").addClass('errortext');
            $('#OrderNo').focus();
            return false;
        }
    }
    function fGetDetails() {
        if ($('#DispatchDetails').val() == "By Transport or Courier") {
            $('#divcourierno').show();
        }
        else {
            $('#divcourierno').hide();
        }
    }
    function fCallPaging(val, IsExport) {
        
        if (val == undefined || val == NaN || val == null || val == "" || val == 0) {
            val = 1;
        }
        $("#IsExport").val(IsExport);
        $("#Page").val(val);
        $('#BtnSearch').trigger('click');

    }
    function GetOrderDetails(OrderNo, Name, MobileNo, DispatchCount,CounterOTP) {
        $("#CustomerName").text(Name);
        $("#CustomerMobile").text(MobileNo);
        $("#DispatchCount").val(DispatchCount);
        $("#CounterOTP").val(CounterOTP);
        $.ajax({
            url: '/Home/GetCustomerOrderDetails',
            type: 'Post',
            data: { OrderNo: OrderNo, Type: "Counter" },
            success: function(result) {
                if (result[0].orderdetails != null) {
                    var srno = 1;
                    var str = "";
                    var IsDispatch = "";
                    console.log(result);
                    $("#tblOrderDetails tbody").html('');
                    for (var i = 0; i <result[0].orderdetails.length; i++) {

                        IsDispatch = "IsDispatch" + i;
                        str += "<tr><td>" + srno + "</td><td  nowrap>" + result[0].orderdetails[i].productName + "</td><td >" + result[0].orderdetails[i].amount + "</td><td >" + result[0].orderdetails[i].pv + "</td><td >" + result[0].orderdetails[i].qty + "</td><td ><input class='test' type='number' readonly style='width:70px' name='Stock" + i + "' id='Stock" + i + "' value='" + result[0].orderdetails[i].stock + "'/ ></td><td style='text-align:right'>" + result[0].orderdetails[i].subTotal
                        str += "</td> <td>";

                        str += " <input type='hidden' name='Fk_VarientId" + i + "'value='" + result[0].orderdetails[i].fk_ProductId + "' /><input type='checkbox' id='" + IsDispatch + "' name='" + IsDispatch + "'  / > </td><td><input class='test' type='number'onkeypress='return isNumberKey(event)' style='width:70px' min='1' onchange='return checkstock(this,'" + result[0].orderdetails[i].stock + "','" + result[0].orderdetails[i].qty + "')' name='DispatchQty" + i + "' id='DispatchQty" + i + "' value='" + result[0].orderdetails[i].pendingQty + "'/ > </td></tr > ";

                        srno = srno + 1;
                    }

                    str += "<input type='hidden' name='Count' value='" + i + "'/><input type='hidden' name='Fk_OrderId' id='Fk_OrderId' value='" + result[0].orderdetails[0].fk_OrderId + "'/>"
                    //str += "<tr><th colspan='2'>Total</th><th>" + TotalReqQty + "</th><th>" + PointValue + "</th><th>" + TotalPV + "</th><th>" + TotalProdAmt + "</th><th>" + FinalAmt + "</th></tr>";

                    $("#tblOrderDetails tbody").html(str);

                }
                else {

                }
            }, error: function() {
                //alert('Some Thing wrong!');
                $("#pre-loader").hide();

            }
        });
    }
    function fcheckisdispatched() {
        $(".errortext").removeClass("errortext");
        if ($('#CounterOTP').val() != $('#OTP').val()) {
            alert('Invalid OTP');
            return false;
        }
        var Qty = "0";
        var Stock = "0";
        var DispatchQty = "0";
        var status = "0";
        var count = "0";
        var checkedValue = false;
        var oTable = document.getElementById('tblOrderDetails');
        var rowLength = oTable.rows.length;
        var input = new Array();
        input = document.getElementsByTagName('input');
        for (i = 0; i < rowLength; i++) {
            checkedValue = false;
            var oCells = oTable.rows.item(i).cells;
            var cellLength = oCells.length;
            for (var j = 0; j < cellLength; j++) {
                var cellVal = oCells.item(j).innerHTML;

                if (i != 0) {

                    var test = "DispatchQty" + (i - 1);


                    var checkboxvalue = $('#IsDispatch' + (i - 1)).val()


                    if (j == 4) {
                        Qty = oCells.item(j).innerHTML;
                    }

                    Stock = $('#Stock' + (i - 1)).val();


                    checkedValue = $("#IsDispatch" + (i - 1)).is(":checked");


                    var value = $('#DispatchQty' + (i - 1)).val();
                    if (checkedValue == true) {
                        if (Number(DispatchQty) > Number(Stock)) {
                            status = "1"
                            alert('Insufficient Stock');
                            return false;
                        }
                    }


                }


            }


        }
        if (status == "1") {
            alert('Insufficient Stock');

            return false;
        }
        if ($('#DispatchDetails').val() == "0") {
            $("#DispatchDetails").addClass('errortext');
            $('#DispatchDetails').focus();
            return false;
        }
        if ($('#DispatchDetails').val() == "By Transport or Courier") {
            if ($('#CourierNo').val() == "") {
                $("#CourierNo").addClass('errortext');
                $('#CourierNo').focus();
                return false;
            }

        }
    }
    function checkstock(value, stock, qty) {

    }

</script>